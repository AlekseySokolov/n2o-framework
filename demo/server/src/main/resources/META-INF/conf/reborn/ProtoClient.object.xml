<?xml version='1.0' encoding='UTF-8'?>
<object xmlns="http://n2oapp.net/framework/config/schema/object-4.0"
        table-name="pim_individual"
        name="${client}">
    <fields>
        <field id="id" domain="integer"/>
        <field id="surname" domain="string"/>
        <field id="name" domain="string"/>
        <field id="patrName" domain="string"/>
        <field id="birthday" domain="date"/>
        <reference id="gender" object-id="gender"/>
    </fields>

    <operations>
        <operation id="create" name="${create}" success-text="${client} '{surname}' ${created}" fail-text="${client.create.failed} '{surname}'">
            <invocation>
                <sql>
                    insert into pim_individual (surname, name, patr_name, birth_dt, gender_id, vip, nationality_id) values (:surname,:name, :patrName, :birthday, :genderId, :vip, :nationalityId);
                </sql>
            </invocation>
            <in>
                <field id="surname" mapping="['surname']"/>
                <field id="name" mapping="['name']"/>
                <field id="patrName" mapping="['patrName']"/>
                <field id="birthday" mapping="['birthday']"/>
                <field id="gender.id" mapping="['genderId']"/>
                <field id="vip" mapping="['vip']"/>
                <field id="nationality.id" mapping="['nationalityId']"/>
            </in>
            <out>
                <field id="id" mapping="[0]"/>
            </out>
        </operation>

        <operation id="update" name="${update}" submit-label="${save}" success-text="${client.save.success} {surname}">
            <invocation>
                <sql>
                    update pim_individual set surname = :surname, name = :name, patr_name = :patrName, birth_dt = :birthday, gender_id = :genderId, nationality_id = :nationalityId, vip = :vip where id = :id;
                </sql>
            </invocation>
            <in>
                <field id="surname" mapping="['surname']"/>
                <field id="name" mapping="['name']"/>
                <field id="patrName" mapping="['patrName']"/>
                <field id="birthday" mapping="['birthday']"/>
                <field id="vip" mapping="['vip']"/>
                <field id="gender.id" mapping="['genderId']"/>
                <field id="nationality.id" mapping="['nationalityId']"/>
                <field id="id" mapping="['id']"/>
            </in>
        </operation>
        <operation id="delete" name="${delete}" confirm-text="${client.delete.confirm} {surname} {name}?" confirm="true"
                   success-text="${client} {surname} ${deleted}" fail-text="${client.delete.failed} '{surname}'">
            <invocation>
                <sql>
                    <!--delete from pim_indiv_code where indiv_id = :id;-->
                    <!--delete from pim_indiv_contact where indiv_id = :id;-->
                    <!--delete from pim_workplace where indiv_id = :id;-->
                    <!--delete from pim_individual where id = :id;-->
                    delete from pim_individual where id = :id;
                    <!--delete from pim_party where id = :id;-->
                </sql>
            </invocation>
            <in>
                <field id="id" mapping="['id']"/>
            </in>
        </operation>
        <operation id="changeStatusVip">
            <invocation>
                <sql>
                    update pim_individual set vip = :vip where id = :id
                </sql>
            </invocation>
            <in>
                <field id="vip" mapping="['vip']"/>
                <field id="id" mapping="['id']"/>
            </in>
        </operation>

        <operation id="toggleStatusVip" name="${change.vip.status}">
            <invocation>
                <sql>
                    update pim_individual set vip = NOT :vip where id = :id
                </sql>
            </invocation>
            <in>
                <field id="vip" mapping="['vip']"/>
                <field id="id" mapping="['id']"/>
            </in>
        </operation>
    </operations>

    <validations>
        <condition id="checkSurname" severity="warning" message="${female.name.validation}" on="gender,surname">
            <![CDATA[
                (typeof gender == 'undefined') || (gender.id != 2) || (surname == '') ||(surname == null) || (surname.trim().charAt(surname.trim().length - 1) == 'а')
            ]]>
        </condition>
        <condition id="checkIvanov" severity="danger" server-moment="before-operation" message="${ivanov.surname.validation}">surname != 'Иванов'</condition>
        <!--<condition id="checkAge" level="error">-->
        <!--<message>Возрастная группа не соответствует дате рождения</message>-->
        <!--<expression on="birthday,ageGroup"><![CDATA[-->
        <!--(ageGroup == null) || (birthday == null)-->
        <!--|| ((ageGroup.min <= new Date().getFullYear() - new Date(birthday.replace(/(\d{2})\.(\d{2})\.(\d{4})/,'$3-$2-$1')).getFullYear())-->
        <!--&& (ageGroup.max > new Date().getFullYear() - new Date(birthday.replace(/(\d{2})\.(\d{2})\.(\d{4})/,'$3-$2-$1')).getFullYear()));-->
        <!--]]>-->
        <!--</expression>-->
        <!--</condition>-->
        <constraint id="checkUniqueName" severity="warning" result="[0][0][0] == 0"
                    message="${unique.name.validation}">
            <invocation>
                <sql>
                    select count(1) from pim_individual
                    where upper(surname) = upper(:surname)
                    and upper(name) = upper(:name)
                    and (:id is null or id != :id)
                </sql>
            </invocation>
            <in>
                <field id="surname" mapping="['surname']"/>
                <field id="name" mapping="['name']"/>
                <field id="id" mapping="['id']"/>
            </in>
        </constraint>
        <condition id="errorValid" severity="danger" message="${validation.error}">errorValid == null</condition>
        <condition id="warningValid" severity="danger" message="${validation.warning}">warningValid == null</condition>
    </validations>

</object>