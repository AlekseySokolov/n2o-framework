<?xml version="1.0" encoding="UTF-8"?>
<xs:schema targetNamespace="http://n2oapp.net/framework/config/schema/query-5.0"
           xmlns:xs="http://www.w3.org/2001/XMLSchema"
           xmlns:dp="http://n2oapp.net/framework/config/schema/data-provider-1.0"
           xmlns:dmn="http://n2oapp.net/framework/config/schema/base/domain-base-1.0">

    <xs:element name="query" type="queryDefinition"/>

    <!--определение выборки-->
    <xs:complexType name="queryDefinition">
        <xs:annotation>
            <xs:documentation>Выборка query-5.0</xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="list" type="listDefinition" maxOccurs="unbounded" minOccurs="0"/>
            <xs:element name="count" type="countDefinition" maxOccurs="unbounded" minOccurs="0"/>
            <xs:element name="unique" type="uniqueDefinition" maxOccurs="unbounded" minOccurs="0"/>
            <xs:element name="fields" type="fieldList" maxOccurs="1" minOccurs="1"/>
            <xs:element name="filters" type="filtersElementDefinition" maxOccurs="1" minOccurs="0"/>
        </xs:sequence>
        <xs:attribute name="object-id" type="xs:string" use="optional" >
            <xs:annotation>
                <xs:documentation>Объект выборки</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="name" type="xs:string" use="optional">
            <xs:annotation>
                <xs:documentation>Локализованное наименование выборки. По умолчанию равно элементу name объекта, на основе которого сделана выборка.</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="route" type="xs:string">
            <xs:annotation>
                <xs:documentation>URL выборки. По умолчанию совпадает с идентификатором выборки.</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:anyAttribute>
            <xs:annotation>
                <xs:documentation>Возможность подключать любые атрибуты.</xs:documentation>
            </xs:annotation>
        </xs:anyAttribute>
    </xs:complexType>

    <xs:complexType name="listDefinition">
        <xs:annotation>
            <xs:documentation>Получение списка записей по определенным фильтрам.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="selectionDefinition">
                <xs:attribute name="result-mapping" type="xs:string" use="optional">
                    <xs:annotation>
                        <xs:documentation>Маппинг списка результатов. Для каждого провайдера данных свои значения по умолчанию.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="result-normalize" type="xs:string" use="optional">
                    <xs:annotation>
                        <xs:documentation>Нормализация списка результатов.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="count-mapping" type="xs:string" use="optional">
                    <xs:annotation>
                        <xs:documentation>Маппинг общего количества записей. Для каждого провайдера данных свои значения по умолчанию.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="countDefinition">
        <xs:annotation>
            <xs:documentation>Получение количества записей.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="selectionDefinition">
                <xs:attribute name="count-mapping" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>Маппинг получения количества записей.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="uniqueDefinition">
        <xs:annotation>
            <xs:documentation>Получение уникальной записи по определенным фильтрам.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="selectionDefinition">
                <xs:attribute name="result-mapping" type="xs:string" use="optional">
                    <xs:annotation>
                        <xs:documentation>Маппинг результата уникальной записи.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="result-normalize" type="xs:string" use="optional">
                    <xs:annotation>
                        <xs:documentation>Нормализация списка результатов.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="selectionDefinition">
        <xs:sequence>
            <xs:element name="sql" type="dp:sqlDefinition" minOccurs="0"/>
            <xs:element name="rest" type="dp:restDefinition" minOccurs="0"/>
            <xs:element name="java" type="dp:javaDefinition" minOccurs="0"/>
            <xs:element name="test" type="dp:testDefinition" minOccurs="0"/>
            <xs:element name="mongodb" type="dp:mongoDbDefinition" minOccurs="0"/>
            <xs:element name="camunda" type="dp:camundaDefinition" minOccurs="0"/>
            <xs:element name="graphql" type="dp:graphqlDefinition" minOccurs="0"/>
            <xs:any namespace="##other" minOccurs="0">
                <xs:annotation>
                    <xs:documentation>Провайдер данных.</xs:documentation>
                </xs:annotation>
            </xs:any>
        </xs:sequence>
        <xs:attribute name="filters" type="xs:string" use="optional">
            <xs:annotation>
                <xs:documentation>Идентификаторы фильтров (filter-id). При наличии хотя бы одного из фильтров сработает этот провайдер данных.</xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:complexType>


    <xs:complexType name="fieldList">
        <xs:annotation>
            <xs:documentation>Список полей выборки.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="field" type="fieldDefinition" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element name="reference" type="referenceFieldDefinition" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element name="list" type="listFieldDefinition" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="fieldDefinition">
        <xs:annotation>
            <xs:documentation>Простое поле выборки.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="baseFieldDefinition">
                <xs:attribute name="name" type="xs:string" use="optional">
                    <xs:annotation>
                        <xs:documentation>Наименование поля. По умолчанию наименование аналогичного поля в объекте.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="domain" type="dmn:domainType" use="optional">
                    <xs:annotation>
                        <xs:documentation>Тип данных</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="default-value" type="xs:string" use="optional">
                    <xs:annotation>
                        <xs:documentation>Значение, которое проставится в поле, если в провайдере оно пустое.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="sorting" type="xs:boolean" default="false">
                    <xs:annotation>
                        <xs:documentation>Участвует ли поле в резолве плейсхолдера sorting</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="sorting-mapping" type="xs:string" use="optional">
                    <xs:annotation>
                        <xs:documentation>Маппинг плейсхолдера направления сортировки в провайдере. По умолчанию [fieldId]Direction.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="sorting-expression" type="xs:string" use="optional">
                    <xs:annotation>
                        <xs:documentation>Выражение, определяющее как сортировать это поле выборки в провайдере.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="filtersElementDefinition">
        <xs:annotation>
            <xs:documentation>Способы фильтрации полей выборки.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="eq" type="filterDef" maxOccurs="unbounded" minOccurs="0"/>
            <xs:element name="eqOrIsNull" type="filterDef" maxOccurs="unbounded" minOccurs="0"/>
            <xs:element name="in" type="filterDef" maxOccurs="unbounded" minOccurs="0"/>
            <xs:element name="inOrIsNull" type="filterDef" maxOccurs="unbounded" minOccurs="0"/>
            <xs:element name="like" type="filterDef" maxOccurs="unbounded" minOccurs="0"/>
            <xs:element name="likeStart" type="filterDef" maxOccurs="unbounded" minOccurs="0"/>
            <xs:element name="isNull" type="filterDef" maxOccurs="unbounded" minOccurs="0"/>
            <xs:element name="contains" type="filterDef" maxOccurs="unbounded" minOccurs="0"/>
            <xs:element name="overlaps" type="filterDef" maxOccurs="unbounded" minOccurs="0"/>
            <xs:element name="more" type="filterDef" maxOccurs="unbounded" minOccurs="0"/>
            <xs:element name="less" type="filterDef" maxOccurs="unbounded" minOccurs="0"/>
            <xs:element name="notEq" type="filterDef" maxOccurs="unbounded" minOccurs="0"/>
            <xs:element name="notIn" type="filterDef" maxOccurs="unbounded" minOccurs="0"/>
            <xs:element name="isNotNull" type="filterDef" maxOccurs="unbounded" minOccurs="0"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="filterDef">
        <xs:annotation>
            <xs:documentation>Фильтрация поля выборки.</xs:documentation>
        </xs:annotation>
        <xs:attribute name="filter-id" type="xs:string" use="optional">
            <xs:annotation>
                <xs:documentation>Идентификатор фильтра.</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="field-id" type="xs:string" use="required">
            <xs:annotation>
                <xs:documentation>Идентификатор поля фильтра.</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="mapping" type="xs:string" use="optional">
            <xs:annotation>
                <xs:documentation>Маппинг значения фильтра в параметры провайдера. По умолчанию эквивалентен id.</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="domain" type="dmn:domainType" use="optional">
            <xs:annotation>
                <xs:documentation>Тип, в который будет конвертировано значение при отправке в провайдер.
                    По умолчанию эквивалентен domain от field с преобразованием в список для множественных типов.</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="default-value" type="xs:string" use="optional">
            <xs:annotation>
                <xs:documentation>Значение, по которому будет идти постоянная фильтрация, если для этого фильтра не передано другое значение.</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="normalize" type="dmn:domainType" use="optional">
            <xs:annotation>
                <xs:documentation>Выражение для предварительного преобразования входных данных.</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="required" type="xs:boolean" use="optional">
            <xs:annotation>
                <xs:documentation>
                    Флаг обязательности фильтра выборки. По умолчанию false.
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:complexType>

    <xs:complexType name="baseFieldDefinition" abstract="true">
        <xs:annotation>
            <xs:documentation>Базовое определение поля</xs:documentation>
        </xs:annotation>
        <xs:attribute name="id" type="xs:string" use="required">
            <xs:annotation>
                <xs:documentation>Идентификатор поля</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="mapping" type="xs:string" use="optional">
            <xs:annotation>
                <xs:documentation>Маппинг данных поля из провайдера. По умолчанию совпадает с id.</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="normalize" type="xs:string" use="optional">
            <xs:annotation>
                <xs:documentation>Нормализация данных поля из провайдера.</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="select" type="xs:boolean" default="true">
            <xs:annotation>
                <xs:documentation>Участвует ли поле в резолве плейсхолдера select</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="select-expression" type="xs:string" use="optional">
            <xs:annotation>
                <xs:documentation>Выражение для подстановки на место плейсхолдера select в провайдере</xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:complexType>

    <xs:complexType name="listFieldDefinition">
        <xs:annotation>
            <xs:documentation>Списковое поле выборки</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="referenceFieldDefinition"/>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="referenceFieldDefinition">
        <xs:annotation>
            <xs:documentation>Составное поле выборки</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="baseFieldDefinition">
                <xs:sequence>
                    <xs:element name="field" type="fieldDefinition" minOccurs="0" maxOccurs="unbounded"/>
                    <xs:element name="reference" type="referenceFieldDefinition" minOccurs="0" maxOccurs="unbounded"/>
                    <xs:element name="list" type="listFieldDefinition" minOccurs="0" maxOccurs="unbounded"/>
                </xs:sequence>
                <xs:attribute name="select-key" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>Ключ для резолва плейсхолдера в в select-expression</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
</xs:schema>
