<?xml version="1.0" encoding="UTF-8"?>
<xs:schema targetNamespace="http://n2oapp.net/framework/config/schema/datasource-1.0"
           xmlns:act="http://n2oapp.net/framework/config/schema/action-2.0"
           xmlns:xs="http://www.w3.org/2001/XMLSchema">

    <xs:complexType name="datasources">
        <xs:sequence>
            <xs:element name="datasource" type="standardDatasourceDefinition" minOccurs="0"/>
            <xs:element name="browser-storage" type="browserStorageDatasourceDefinition" minOccurs="0"/>
        </xs:sequence>
    </xs:complexType>

    <xs:element name="datasource" type="standardDatasourceDefinition"/>
    <xs:element name="browser-storage" type="browserStorageDatasourceDefinition"/>

    <xs:complexType name="standardDatasourceDefinition">
        <xs:complexContent>
            <xs:extension base="datasourceDefinition">
                <xs:sequence>
                    <xs:element name="submit" type="act:submitDefinition" minOccurs="0"/>
                    <xs:element name="filters" type="datasourceFiltersDefinition" minOccurs="0"/>
                </xs:sequence>
                <xs:attribute name="default-values-mode" type="act:defaultValuesMode" default="query">
                    <xs:annotation>
                        <xs:documentation>
                            Подстановка значений по умолчанию, режим по умолчанию query
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="object-id" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>Идентификатор объекта.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="query-id" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>Идентификатор выборки, на основе которой происходит получение данных.
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="route" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>URL получения данных</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="browserStorageDatasourceDefinition">
        <xs:complexContent>
            <xs:extension base="datasourceDefinition">
                <xs:sequence>
                    <xs:element name="submit" type="browserStorageDatasourceSubmit" minOccurs="0"/>
                </xs:sequence>
                <xs:attribute name="storage-type" type="storageType" default="sessionStorage">
                    <xs:annotation>
                        <xs:documentation>Тип хранилища в браузере</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="key" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>Ключ, под которым будут хранится данные</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:simpleType name="storageType">
        <xs:annotation>
            <xs:documentation>Тип хранилища</xs:documentation>
        </xs:annotation>
        <xs:restriction>
            <xs:enumeration value="sessionStorage"/>
            <xs:enumeration value="localStorage"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:complexType name="browserStorageDatasourceSubmit">
        <xs:annotation>
            <xs:documentation>Сохранение полей формы при их изменении</xs:documentation>
        </xs:annotation>
        <xs:attribute name="auto" type="xs:boolean" default="true">
            <xs:annotation>
                <xs:documentation>Автоматически ли записывать в хранилище при изменении данных?</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="storage-type" type="storageType">
            <xs:annotation>
                <xs:documentation>Тип хранилища, в которое будут записываться данные</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="key" type="xs:string">
            <xs:annotation>
                <xs:documentation>Ключ, под которым будут записываться данные</xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:complexType>

    <xs:complexType name="datasourceDefinition">
        <xs:annotation>
            <xs:documentation>Источник данных.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="dependencies" type="dependenciesDefinition" minOccurs="0"/>
        </xs:sequence>
        <xs:attribute name="id" type="xs:string" use="required">
            <xs:annotation>
                <xs:documentation>Идентификатор источника данных.</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="size" type="xs:integer" default="10">
            <xs:annotation>
                <xs:documentation>Размер выборки</xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:complexType>

    <xs:complexType name="dependenciesDefinition">
        <xs:annotation>
            <xs:documentation>Зависимости источника данных.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="fetch" type="fetchDefinition" maxOccurs="unbounded" minOccurs="0"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="fetchDefinition">
        <xs:annotation>
            <xs:documentation>Обновление данных при изменении зависимых источников данных.</xs:documentation>
        </xs:annotation>
        <xs:attribute name="on" type="xs:string">
            <xs:annotation>
                <xs:documentation>Иденитификатор источника данных.</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="model" type="act:clientModel">
            <xs:annotation>
                <xs:documentation>Модель источника данных.</xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:complexType>

    <xs:complexType name="datasourceFiltersDefinition">
        <xs:annotation>
            <xs:documentation>Предустановленная фильтрация.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="eq" type="filterDefValue" maxOccurs="unbounded" minOccurs="0"/>
            <xs:element name="in" type="filterDefValues" maxOccurs="unbounded" minOccurs="0"/>
            <xs:element name="like" type="filterDefValue" maxOccurs="unbounded" minOccurs="0"/>
            <xs:element name="likeStart" type="filterDefValue" maxOccurs="unbounded" minOccurs="0"/>
            <xs:element name="isNull" type="filterDefSimple" maxOccurs="unbounded" minOccurs="0"/>
            <xs:element name="contains" type="filterDefValues" maxOccurs="unbounded" minOccurs="0"/>
            <xs:element name="overlaps" type="filterDefValues" maxOccurs="unbounded" minOccurs="0"/>
            <xs:element name="more" type="filterDefValue" maxOccurs="unbounded" minOccurs="0"/>
            <xs:element name="less" type="filterDefValue" maxOccurs="unbounded" minOccurs="0"/>
            <xs:element name="notEq" type="filterDefValue" maxOccurs="unbounded" minOccurs="0"/>
            <xs:element name="notIn" type="filterDefValues" maxOccurs="unbounded" minOccurs="0"/>
            <xs:element name="isNotNull" type="filterDefSimple" maxOccurs="unbounded" minOccurs="0"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="filterDefSimple">
        <xs:annotation>
            <xs:documentation>Предустановленная фильтрация поля выборки.</xs:documentation>
        </xs:annotation>
        <xs:attribute name="field-id" type="xs:string" use="required">
            <xs:annotation>
                <xs:documentation>Поле в выборке, по которому будет фильтрация.</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="required" type="xs:boolean">
            <xs:annotation>
                <xs:documentation>Флаг обязательности предустановленного фильтра.</xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:complexType>

    <xs:complexType name="filterDefValue">
        <xs:complexContent>
            <xs:extension base="filterDefBase">
                <xs:annotation>
                    <xs:documentation>Предустановленная фильтрация поля выборки.</xs:documentation>
                </xs:annotation>
                <xs:attribute name="value" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>Значение фильтра (одно значение).</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="required" type="xs:boolean">
                    <xs:annotation>
                        <xs:documentation>Флаг обязательности предустановленного фильтра.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="filterDefValues">
        <xs:complexContent>
            <xs:extension base="filterDefBase">
                <xs:annotation>
                    <xs:documentation>Предустановленная фильтрация поля выборки.</xs:documentation>
                </xs:annotation>
                <xs:attribute name="required" type="xs:boolean">
                    <xs:annotation>
                        <xs:documentation>Флаг обязательности предустановленного фильтра.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="values" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>Значения фильтра (через запятую).</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="filterDefValuesWithBody">
        <xs:complexContent>
            <xs:extension base="filterDefBase">
                <xs:annotation>
                    <xs:documentation>
                        Предустановленная фильтрация поля выборки. Со возможностью задания списка значений в теле.
                    </xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="value" minOccurs="0" maxOccurs="unbounded"/>
                </xs:sequence>
                <xs:attribute name="values" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>Значения фильтра (через запятую).</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="filterDefBase">
        <xs:annotation>
            <xs:documentation>Предустановленная фильтрация поля выборки.</xs:documentation>
        </xs:annotation>
        <xs:attribute name="field-id" type="xs:string" use="required">
            <xs:annotation>
                <xs:documentation>Поле, по которому будет фильтрация.</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="datasource" type="xs:string">
            <xs:annotation>
                <xs:documentation>Источник данных, по полю которого будет фильтрация.</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="param" type="xs:string">
            <xs:annotation>
                <xs:documentation>Имя параметра для фильтрации (в случае, если фильтрация по параметру из url).
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="model" type="act:clientModel">
            <xs:annotation>
                <xs:documentation>Модель для получения значения фильтра.</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="routable" type="xs:boolean" default="false">
            <xs:annotation>
                <xs:documentation>Попадает ли фильтр в url. По умолчанию false.</xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:complexType>
</xs:schema>
